name: Midday build (Linux)

on:
  push:
    branches:
     - "**"
  pull_request:
    branches:
     - "**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-pack-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - uses: actions/checkout@v2

      - run: sudo apt install libgtk-4-dev libadwaita-1-dev build-essential

      - name: Update dependencies
        run: bash update_dependencies_linux.sh

      - name: Generate version
        run: bash src/common/src/generate-version.sh

      - name: Build .Net
        run: dotnet publish src_old/AMBPatcher -c Release -m

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build Rust
        run: cargo build --release

      - name: Pack
        run: bash pack_linux.sh
        
      - uses: actions/upload-artifact@v4
        with:
          name: Sonic4ModLoader_linux
          path: dist/Sonic4ModLoader_linux.zip

      - uses: actions/upload-artifact@v4
        with:
          name: SHA256SUMS_linux
          path: dist/SHA256SUMS_linux

      - uses: actions/upload-artifact@v4
        with:
          name: AMBPatcher
          path: dist/Sonic4ModLoader/AMBPatcher.exe
          
      - uses: actions/upload-artifact@v4
        with:
          name: amb-rs-linux
          path: dist/Sonic4ModLoader/amb-rs

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo test -p amb-rs-tests
