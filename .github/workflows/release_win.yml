name: Release (Windows)

on:
  release:
    types: [published]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-pack-win64:
    runs-on: windows-2022
    steps:
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - uses: actions/checkout@v2

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - uses: actions/setup-python@v2
        with:
          python-version: '3.13'

      - name: Set gtk-build-moment-stamp for cache
        run: echo "stamp=$([Math]::Truncate(($(Get-Date).DayofYear / 7)))" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
        id: gtk-build-moment-stamp

      - uses: actions/cache@v4
        id: cache-gtk
        with:
          path: C:/gtk-build/gtk/x64/release
          key: ${{ runner.os }}-gtk-build-binaries-${{ steps.gtk-build-moment-stamp.outputs.stamp }}

      - run: py -3.13 -m pip install --user pipx
        if: ${{ steps.cache-gtk.outputs.cache-hit != 'true' }}
      - run: py -3.13 -m pipx ensurepath
        if: ${{ steps.cache-gtk.outputs.cache-hit != 'true' }}
      - run: pipx install gvsbuild
        if: ${{ steps.cache-gtk.outputs.cache-hit != 'true' }}
      - run: gvsbuild build gtk4 libadwaita librsvg
        if: ${{ steps.cache-gtk.outputs.cache-hit != 'true' }}
      - run: echo "C:\gtk-build\gtk\x64\release\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Update dependencies
        run: bash update_dependencies_win.sh

      - name: Generate version
        run: bash src/common/src/generate-version.sh

      - name: Build .Net
        run: dotnet publish src_old -c Release -m

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build Rust
        run: cargo build --release

      - name: Pack
        run: bash pack_win.sh
        
      - uses: actions/upload-artifact@v4
        with:
          name: Sonic4ModLoader_win
          path: dist/Sonic4ModLoader_win.zip

      - uses: actions/upload-artifact@v4
        with:
          name: SHA256SUMS_win
          path: dist/SHA256SUMS_win

      - uses: actions/upload-artifact@v4
        with:
          name: AMBPatcher
          path: dist/Sonic4ModLoader/AMBPatcher.exe

      - uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: |
            dist/Sonic4ModLoader/AMBPatcher.exe
            dist/SHA256SUMS_win
            dist/Sonic4ModLoader_win.zip

  tests:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo test -p amb-rs-tests
